bundle agent request_role_information {

vars:

#  "hash"                          string => file_hash("${sys.workdir}/Data/request_role_view" , "md5" );
#  "hash"                          string => readfile("${sys.workdir}/Data/request_role_view" , "0" );
# "role_view"                        data => parsejson('
#     { "message": "view", "query": "$(classify.role)", "content": { "request_host": "$(sys.uqhost)", "domain": "$(sys.domain)", "role": "$(classify.role)" } }');

# "request_role_view"              string => storejson(role_view);
# "response"                       string => execresult("/var/cfengine/bin/cf-message.py '${request_role_view}'","noshell");
  "response_role_information"      string => "";

# "role_view_write"                  data => parsejson('
#     { "message": "feed", "query": "role_feed", "content": { "request_host": "$(sys.uqhost)", "domain": "$(sys.domain)", "role": "${classify.role}" } }');

# "request_role_view_write"        string => storejson(role_view_write);

classes:

# "wru"                             expression => strcmp( "$(response)" , "no_role_view" );

files:

  "${sys.workdir}/Data/request_role_view"
    create => "true";

methods:

# "Collect environment information" usebundle => classify_environment;
  "Collect role data"               usebundle => "$(classify.role)_data";

 !bad_ip::
  "Check etc hosts nic"             usebundle => check_ip( "$($(classify.role)_data.$(etc_hosts_nic))" );
  "Check nic_admin"                 usebundle => check_ip( "$($(classify.role)_data.$(admin_nics))" );

# wru::
# "Feed role to Data"           usebundle => cf_message( ${request_role_view_write} );

reports:

  "${this.bundle} response: ${response}";
  "${this.bundle} response_role_information: ${response_role_information}";

  no_device|no_bridge::
  "${this.bundle} bad etc_hosts and admin ip's:  $($(classify.role)_data.$(etc_support_nic)), $($(classify.role)_data.$(admin_nics)) ";
  !bad_ip::
  "${this.bundle}: good etc_hosts and admin ip's.";

}
