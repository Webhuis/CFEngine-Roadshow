bundle agent ssh_all_config {

vars:

  "ssh_config"                              string => "/etc/ssh/ssh_config";
  "ssh[ServerAliveInterval]"                string => "60";

methods:

  "The sshd role based config"           usebundle => sshd_role_config;
  "The ssh client keeps the connection"  usebundle => edit_ssh("$(ssh_config)", "ssh_all_config.ssh");

reports:

 "$(this.bundle): I am implementing safe ssh configuration common to all platforms";

}

bundle agent sshd_role_config {

vars:

  "sshd_config"                             string => "/etc/ssh/sshd_config";
  "sshd_config_template"                    string => "$($($(classify.role).role_data).sshd_role_config_tamplate)";

 files:

  "$(sshd_config)"
   comment                   => "sshd config",
   perms                     => mo("644","root"),
   create                    => "true",
   action                    => r_immediate,
   edit_template             => "$(sys.workdir)/roadshow_inputs/templates/$(sshd_config_tmplate)",
   classes                   => if_repaired("restart_sshd");

methods:

  "Get the sshd role tempate"            usebundle => get_template("pam_ldap.conf.tmpl");

services:

  "sshd"                    service_policy => "start";

commands:

 restart_sshd::
  "/usr/sbin/service sshd restart"
    comment => "restarting sshd";

reports:

 "$(this.bundle): I am implementing sshd role based configuration";

}

bundle agent edit_ssh(file,params) {

  files:
      "$(file)"
       handle                => "edit_ssh",
       comment               => "Set desired ssh_config parameters",
       edit_line             => set_config_values("$(params)");

}
