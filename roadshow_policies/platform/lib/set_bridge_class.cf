bundle agent set_bridge_class(vlan, var_bridge_vlan) {

classes:

  "no_bridge_$(vlan)"             expression => regcmp( ".*does not exist.*",
                                                        "$(var_bridge_vlan)");

  "bridge_down $(vlan)"           expression => regcmp( ".*DOWN.*",
                                                        "$(var_bridge_vlan)");

vars:

  "bridge"                            string => "breth0";

methods:

 "no_bridge_$(vlan)"::
  "Add bridge $(vlan)"             usebundle => add_bridge( "$(bridge)", "$(vlan)" );
  "Bring up bridge $(vlan)"        usebundle => bring_bridge_up( "$(bridge)", "$(vlan)" ),
                                     comment => "layer two";
  "No bridge $(vlan)"              usebundle => no_bridge;
  "bad_ip $(vlan)"                 usebundle => bad_ip;

 "bridge_down_$(vlan)"::
  "Bring up bridge $(vlan)"        usebundle => bring_bridge_up( "$(bridge)", "$(vlan)" ),
                                     comment => "layer two";
  "Bridge down $(vlan)"            usebundle => bridge_down;
  "bad_ip $(vlan)"                 usebundle => bad_ip;

reports:

 "no_bridge_$(vlan)"::
  "$(this.bundle): $(var_bridge_vlan) Bingo, no bridge!";

 "bridge_down_$(vlan)"::
  "$(this.bundle): $(var_bridge_vlan) Bingo, bridge down!";

}

bundle agent add_bridge(bridge, vlan) {

commands:
 
  "/usr/bin/ovs-vsctl add-br breth0.$(vlan)";
  "/usr/bin/ovs-vsctl add-port breth0.$(vlan) eth0.$(vlan) vlan_mode=trunk tag=$(vlan)";

reports:

 "$(this.bundle): bridge $(bridge).$(vlan) added!";

}

bundle agent bring_bridge_up(bridge, vlan) {

commands:
 
  "/sbin/ip link set dev $(bridge).$(vlan) up";
  "/sbin/ifup $(bridge).$(vlan)";
#  comment => "Make sure of layer three if bridge has an IP addres";

reports:

 "$(this.bundle): bridge $(bridge).$(vlan) up!";

}
