bundle agent set_interface_class(vlan, var_interface_vlan) {

classes:

  "no_device_$(vlan)"             expression => regcmp( ".*does not exist.*",
                                                        "$(var_interface_vlan)");

  "if_down $(vlan)"               expression => regcmp( ".*DOWN.*",
                                                        "$(var_interface_vlan)");

methods:

 "no_device_$(vlan)"::
  "Add device $(vlan)"             usebundle => add_device( "$(interface)", "$(vlan)" );
  "Bring up interface $(vlan)"     usebundle => bring_device_up( "$(interface)", "$(vlan)" ),
                                     comment => "layer one";

 "if_down_$(vlan)"::
  "Bring up interface $(vlan)"     usebundle => bring_device_up( "$(interface)", "$(vlan)" ),
                                     comment => "layer one";

reports:

 "no_device_$(vlan)"::
  "$(this.bundle): $(var_interface_vlan) Bingo!";

 "if_down_$(vlan)"::
  "$(this.bundle): $(var_interface_vlan) Bingo!";

}

bundle agent add_device(interface, vlan) {

commands:
 
  "/sbin/ip link add link eth0 name $(interface).$(vlan) type vlan id $(vlan)";

reports:

 "$(this.bundle): interface $(interface).$(vlan) added!";

}

bundle agent bring_device_up(interface, vlan) {

commands:
 
  "/sbin/ip link set dev $(interface).$(vlan) up";
  "/sbin/vconfig add $(interface) $(vlan)";

reports:

 "$(this.bundle): interface $(interface).$(vlan) up!";

}

bundle agent bad_ip(ips) {

classes:

  "bad_ip"        expression => regcmp( "bad_ip", $(bad_ip) );

vars:

  "bad_ip"            string => "bad_ip";

methods:

 bad_ip::

  "The show stops here!"  usebundle => stop_the_show;

reports:

  "$(this.bundle) Bad IP addresson interface: $(ips)!";

}

