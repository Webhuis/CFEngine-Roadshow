bundle agent get_interfaces(vlan) {

vars:

  "vlan_index"                slist => getindices($(vlan));

methods:

  "Get vlan status"       usebundle => vlan_status("$(vlan_index)", "$($(vlan)[$(vlan_index)])");

reports:

  "$(this.bundle): $(vlan), $(vlan_index), $($(vlan)[$(vlan_index)])";

}

bundle agent vlan_status(vlan_index, vlan ) {

vars:

  "interface"                         string => "$(kvm_host.interface_prefix)";
  "bridge"                            string => "$(kvm_host.bridge_prefix)";
  "var_interface_$(vlan)"             string => execresult("/sbin/ip link show dev $(interface).$(vlan)","noshell");
  "var_bridge_$(vlan)"                string => execresult("/sbin/ip link show dev $(bridge).$(vlan)","noshell");

methods:

  "Set bridge interface class"     usebundle => set_class( "$(vlan)", "$(var_interface_$(vlan))", "$(var_bridge_$(vlan))" );

reports:

# "$(this.bundle) interface vlan info: $(var_interface_$(vlan)), $(var_bridge_$(vlan))";
# "$(this.bundle) vlan info:  $(vlan_index), $(vlan)";
# "$(this.bundle) down interface: $(down_interface_$(vlan)[1])";
# "$(this.bundle) down bridge: $(down_bridge_$(vlan)[1])";

  "$(this.bundle): $(interface)_$(vlan)";
  "$(this.bundle): $(bridge)_$(vlan)";

}

bundle agent set_class(vlan, var_interface_vlan, var_bridge_vlan) {

classes:

  "interface_$(vlan)"             expression => regcmp(
                                     ".*DOWN.*",
                                     "$(var_interface_vlan)");

  "bridge_$(vlan)"                expression => regcmp(
                                     ".*DOWN.*",
                                     "$(var_bridge_vlan)");

methods:

 "interface_$(vlan)"::
  "Bring up interface $(vlan)"     usebundle => bring_link_up("$(kvm_host.interface_prefix).$(vlan)");

 "bridge_$(vlan)"::
  "Bring up bridge $(vlan)"        usebundle => bring_link_up("$(kvm_host.bridge_prefix).$(vlan)");

reports:

# "$(this.bundle): $(var_interface_vlan)";

 "interface_$(vlan)"::
  "$(this.bundle): $(var_interface_vlan) Bingo!";
#"!interface_$(vlan)"::
# "$(this.bundle): $(var_interface_vlan): Ok!";

# "$(this.bundle): $(var_bridge_vlan)";

 "bridge_$(vlan)"::
  "$(this.bundle): $(var_bridge_vlan) Bingo!";
#"!bridge_$(vlan)"::
# "$(this.bundle): $(var_bridge_vlan): Ok!";

}

bundle agent bring_link_up(device) {

commands:

  "/sbin/ip link set dev $(device) up";

reports:

 "$(this.bundle): $(device) up!";

}
