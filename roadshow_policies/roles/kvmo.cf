bundle agent kvmo {

vars:

  "role_name"                         string => "kvm hypervisor opennebula node";

  "bundles[kvm_host]"                 string => "${sys.flavor}/kvm_host.cf";
  "bundles[opennebula_node]"          string => "${sys.flavor}/opennebula_node.cf";

  "sequence"                           slist => getindices("bundles");
  "inputs"                             slist => getvalues("bundles");

# "admin_nics"                         slist => { "$($(sys.flavor).nics[admin])", "$($(sys.flavor).nics[hosts])" };
# "admin_nics"                         slist => { "$(sys.ipv4)" };
  "admin_nics"                         slist => { "$($(kvm_host).nics[admin])", "$($(kvm_host).nics[hosts])" };

methods:

  "KVM host ready for VM"          usebundle => kvm_host;
  "We desire Opennebula"           usebundle => opennebula_node; 

reports:

 "${this.bundle}: ${classify.role} ${${classify.role}.inputs}";

 "${this.bundle}: component $(inputs)";

 "${this.bundle}: $(admin_nics)";
 "${this.bundle}: $($(sys.flavor).nics[function])";
 "${this.bundle}: $($(sys.flavor).nics[admin])";

}

bundle agent components {

vars:


reports:

 "${this.bundle}: components $(inputs)";

}
