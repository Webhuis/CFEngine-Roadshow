bundle agent w3ci {

vars:

  "role_name"                         string => "HTTP / HTTPS w3c compliant internal Webserver";

  "bundles[apache2]"                  string => "${sys.flavor}/apache2.cf";
  "bundles[nginx]"                    string => "${sys.flavor}/nginx.cf";

  "sequence"                           slist => getindices("bundles");
  "inputs"                             slist => getvalues("bundles");

methods:

  "We need the Apache Webserver"   usebundle => "apache2";
  "We need nginx serving https"    usebundle => "nginx";

reports:

 "${this.bundle}: $(role-name)";

}

bundle agent role_data {
  
vars:

  "nic[support]"                      string => "$($(classify.organisation).nic[support])";
  "nic[admin]"                        string => "$($(classify.organisation).nic[admin])";
  "nic_index"                          slist => getindices("nic");
  "nic_trick"                          slist => { "0", "1" };

  "ddns[support][ip]"                 string => "$(sys.ipv4[$(nic[support])])";
  "ddns[support][nic]"                string => "$(nic[support])";
  "ddns[support][suffix]"             string => "";
  "ddns[support][vlan]"               string => "$($(classify.organisation).vlan[support])";
  "ddns[admin][ip]"                   string => "$(sys.ipv4[$(nic[admin])])";
  "ddns[admin][nic]"                  string => "$(nic[admin])";
  "ddns[admin][suffix]"               string => "-ssh";
  "ddns[admin][vlan]"                 string => "$($(classify.organisation).vlan[admin])";

  "ddns_index"                         slist => getindices("ddns");

  "etc_hosts_nic"                      slist => { "$(ddns[support][ip])" };
  "support_ip"                         slist => { "$(ddns[support][ip])" };
  "admin_nics"                         slist => { "$(ddns[admin][ip])" };

methods:

  "We need predictable names"      usebundle => "nic_mac_map";

reports:

  "$(this.bundle) nics: $(nic)";
  "$(this.bundle) service_nic: $(nic[service])";
  "$(this.bundle) admin_nics: $(admin_nics)";

}
