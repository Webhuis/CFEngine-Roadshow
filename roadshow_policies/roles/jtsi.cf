bundle agent jtsi {

vars:

  "role_name"                         string => "The Jitsi Video conferencingn server";

  "bundles[jitsi_server]"             string => "$(sys.flavor)/jitsi_server.cf";

  "sequence"                           slist => getindices("bundles");
  "inputs"                             slist => getvalues("bundles");

  "etc_hosts_nic"                      slist => { "$($(sys.flavor).nics[one])" };
  "admin_nics"                         slist => { "$($(sys.flavor).nics[one])", "$($(sys.flavor).nics[five])" };

methods:

  "We do Jitsi Conferencering"     usebundle => "jitsi_server";

reports:

 "${this.bundle}: $($(sys.flavor).nics)";

}

bundle agent jtsi_data {
  
vars:

  "vnic[service]"                     string => "$($(sys.flavour).vnic[service])";
  "vnic[support]"                     string => "$($(sys.flavour).vnic[support])";
  "vnic[admin]"                       string => "$($(sys.flavour).vnic[admin])";

  "ddns[support][ip]"                 string => "$(sys.ipv4[$(vnic[support])])";
  "ddns[support][suffix]"             string => "";
  "ddns[admin][ip]"                   string => "$(sys.ipv4[$(vnic[admin])])";
  "ddns[admin][suffix]"               string => "-ssh";

  "etc_hosts_nic"                     slist  => { "$(sys.ipv4[$(vnic[support])])" };
  "admin_nics"                        slist  => { "$(sys.ipv4[$(vnic[admin])])", "$(sys.ipv4[$(vnic[support])])" };

methods:

  "Check interfaces are up"        usebundle => check_vnic( "$(vnic[$(vnic_index)])" ),
                                   comment   => "This is a layer I and II check on the virtual switch";
  "We update ddns"                 usebundle => interface_ddns("jtsi_data.ddns");

reports:

  "${this.bundle} nics: $(vnic)";
  "${this.bundle} service_nic: $(etc_hosts_nic)";
  "${this.bundle} admin_nics: ${admin_nics}";

}

