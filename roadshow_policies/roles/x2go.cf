bundle agent x2go {

vars:

  "role_name"                                  string => "x2go virtual desktop";

  "bundles[x2go_desktop]"                      string => "${sys.flavor}/x2go_desktop.cf";
  "bundles[x2goserver]"                        string => "${sys.flavor}/x2goserver.cf";

  "sequence"                                    slist => getindices("bundles");
  "inputs"                                      slist => getvalues("bundles");

methods:

  "We desire the x2go desktop"              usebundle => "x2go_desktop";
  "We desire the x2go system"               usebundle => "x2goserver";

}

bundle agent x2go_data {
  
vars:

  "vnic[support]"                     string => "$($(sys.flavour).vnic[support])";
  "vnic[admin]"                       string => "$($(sys.flavour).vnic[admin])";

  "vnic_index"                         slist => getindices("vnic");


  "etc_hosts_nic"                     slist  => { "$(sys.ipv4[$(vnic[support])])" };
  "support_ip"                        slist  => { "$(sys.ipv4[$(vnic[support])])" };
  "admin_nics"                        slist  => { "$(sys.ipv4[$(vnic[support])])", "$(sys.ipv4[$(vnic[admin])])", };

methods:

  "Check interfaces are up"        usebundle => check_vnic( "$(vnic[$(vnic_index)])" ),
                                   comment   => "This is a layer I and II check on the virtual switch";


reports:

  "${this.bundle} nics: $(vnic)";
  "${this.bundle} support_nic: $(etc_hosts_nic)";
  "${this.bundle} admin_nics: ${admin_nics}";

}

