bundle agent tpxy {

vars:

  "role_name"                         string => "Transparant Proxy";

  "bundles[t_proxy]"                  string => "${sys.flavor}/t_proxy.cf";

  "sequence"                           slist => getindices("bundles");
  "inputs"                             slist => getvalues("bundles");

methods:

  "We are an ssh stepping stone"   usebundle => "t_proxy";

reports:

 "${this.bundle}: $($(sys.flavor).nics)";

}

bundle agent tpxy_data {
  
vars:

  "vnic[support]"                     string => "$($(sys.flavour).vnic[support])";
  "vnic[admin]"                       string => "$($(sys.flavour).vnic[admin])";
  "vnic[wan]"                         string => "$($(sys.flavour).vnic[wan])";

  "ddns[support][ip]"                 string => "$(sys.ipv4[$(vnic[support])])";
  "ddns[support][nic]"                string => "$(vnic[support])";
  "ddns[support][suffix]"             string => "";
  "ddns[support][vlan]"               string => "$($(classify.eco_vars).network[support][vlan])";
  "ddns[admin][ip]"                   string => "$(sys.ipv4[$(vnic[admin])])";
  "ddns[admin][nic]"                  string => "$(vnic[admin])";
  "ddns[admin][suffix]"               string => "-ssh";
  "ddns[admin][vlan]"                 string => "$($(classify.eco_vars).network[admin][vlan])";

  "etc_hosts_nic"                     slist  => { "$(sys.ipv4[$(vnic[support])])" };
  "admin_nics"                        slist  => { "$(sys.ipv4[$(vnic[admin])])", "$(sys.ipv4[$(vnic[support])])" };

methods:

  "Check interfaces are up"        usebundle => check_vnic( "$(vnic[$(vnic_index)])" ),
                                   comment   => "This is a layer I and II check on the virtual switch";

reports:

  "${this.bundle} nics: $(vnic)";
  "${this.bundle} service_nic: $(etc_hosts_nic)";
  "${this.bundle} admin_nics: ${admin_nics}";

}

