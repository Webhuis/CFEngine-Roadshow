bundle agent ldap {

vars:

  "role_name"                         string => "The HA LDAP cluster server";

  "bundles[openldap_server]"          string => "$(sys.flavor)/openldap_server.cf";
  "bundles[openldap_proxy]"           string => "$(sys.flavor)/openldap_proxy.cf";

  "sequence"                           slist => getindices("bundles");
  "inputs"                             slist => getvalues("bundles");

methods:

  "We are an openLDAP server"      usebundle => "openldap_server";
  "We are an openLDAP server"      usebundle => "openldap_proxy";

reports:

  "$(this.bundle) role name: $(role_name)";
  "$(this.bundle) role inputs: $($(classify_role).inputs)";

}

bundle agent role_data {
  
vars:

  "nic[support]"                      string => "$($(classify.organisation).nic[support])";
  "nic[admin]"                        string => "$($(classify.organisation).nic[admin])";
  "nic_index"                          slist => getindices("nic");
  "nic_trick"                          slist => { "0", "1" };

  "ip_line[support]"                  string => execresult("$($(sys.flavor).ip_cmd) r link show dev $(nic[support]) | grep 'dev' ", useshell);
  "ip_list[support]"                   slist => string_split($(ip_line[support]), ".*dev ", 99);
  "ip[support]"                       string => nth(ip_list[support], "1");

  "ddns[support][ip]"                 string => "$(sys.ipv4[$(nic[support])])";
  "ddns[support][nic]"                string => "$(nic[support])";
  "ddns[support][suffix]"             string => "";
  "ddns[support][vlan]"               string => "$($(classify.organisation).vlan[support])";
  "ddns[admin][ip]"                   string => "$(sys.ipv4[$(nic[admin])])";
  "ddns[admin][nic]"                  string => "$(nic[admin])";
  "ddns[admin][suffix]"               string => "-ssh";
  "ddns[admin][vlan]"                 string => "$($(classify.organisation).vlan[admin])";

  "ddns_index"                         slist => getindices("ddns");

  "etc_hosts_nic"                      slist => { "$(ddns[support][ip])" };
  "support_ip"                         slist => { "$(ddns[support][ip])" };
  "admin_nics"                         slist => { "$(ddns[admin][ip])" };

methods:

  "We need predictable names"      usebundle => nic_mac_map;

reports:

  "$(this.bundle) nics: $(nic)";
  "$(this.bundle) ip[support]: $(ip[support])";
  "$(this.bundle) ddns: $(ddns[$(ddns_index)][ip])";
  "$(this.bundle) support_nic: $(etc_hosts_nic)";
  "$(this.bundle) admin_nics: $(admin_nics)";

}

