bundle agent postgresql {

classes:

  "pg_cluster_values_exist"        expression => isvariable("pg_cluster_index");

vars:

  "pkg[etcd]"	        	   	string => "*";
  "pkg[patroni]"	   	   	string => "*";
  "pkg[postgresql-13]"	   	   	string => "*";
  "pkg[postgresql-client-13]"	   	string => "*";

  "pg_cluster_index"                     slist => { "$($(classify.domain).pg_cluster_index)" };

  "templates"                     slist => { "pg_hba.conf.tmpl", "postgresql.conf.tmpl" };

files:

  "/etc/postgresql/13/main/postgresql.conf"
   perms             => mo("644","postgres"),
   create            => "true",
   action            => r_immediate,
   edit_template     => "$(sys.workdir)/roadshow_dynamic_inputs/templates/postgresql.conf.tmpl",
   classes           => r_if_repaired("restart_postgresql");

  "/etc/modules"
   perms             => mo("644","root"),
   create            => "true",
   action            => r_immediate,
   edit_defaults     => no_backup,
   edit_line         => patroni_modules,
   classes           => r_if_repaired("restart_patroni");

  "/etc/udev/rules.d/61-watchdog.rules"
   perms             => mog("644","root","root"),
   create            => "true",
   action            => r_immediate,
   edit_defaults     => no_backup,
   edit_line         => watchdog_rules,
   classes           => r_if_repaired("restart_patroni");

  "/dev/watchdog*"
   perms             => mog("660","postgres","postgres"),
   action            => r_immediate,
   edit_defaults     => no_backup,
   classes           => r_if_repaired("restart_patroni");

 pg_cluster_values_exist::
  "/etc/postgresql/13/main/pg_hba.conf"
   perms             => mo("644","postgres"),
   create            => "true",
   action            => r_immediate,
   edit_template     => "$(sys.workdir)/roadshow_dynamic_inputs/templates/pg_hba.conf.tmpl",
   classes           => r_if_repaired("restart_postgresql");

methods:
 
  "We desire postgresql HA cluster templates"  usebundle => get_template("$(templates)");
  "We desire the HA Postgresql cluster"        usebundle => packages("postgresql.pkg");

commands:

 restart_postgresql::

  "/etc/init.d/postgresql restart";

 restart_patroni::

  "/etc/init.d/patroni restart";

reports:

  "$(this.bundle): This is the PostgreSQL database server";

 pg_cluster_values_exist::
  "$(this.bundle): Variable \"$($(classify.domain).pg_cluster_index)\".. exists: $($(classify.domain).pg_cluster_index)";
  "$(this.bundle): Variable  \"$(pg_cluster_index)\".. exists: $($(classify.domain).pg_cluster[$($(classify.domain).pg_cluster_index)])";

 !pg_cluster_values_exist::
  "$(this.bundle): Variable \"$($(classify.domain).pg_cluster_index)\".. does not exists: $($(classify.domain).pg_cluster_index)";
  
}

bundle edit_line  patroni_modules {

delete_lines:

  ".*";

insert_lines:

"softdog";

}

bundle edit_line  watchdog_rules {

delete_lines:

  ".*";

insert_lines:

'KERNEL==\"watchdog\", OWNER=\"postgres\", GROUP=\"postgres\"';

}

