bundle agent nagios3 {

vars:

  "pkg[nagios3-common]"           string => "*";
  "pkg[nagios3-core]"             string => "*";
  "pkg[nagios-plugins]"           string => "*";
  "pkg[ndoutils-nagios3-mysql]"   string => "*";

  "htaccess[CFEngine_Roadshow]"   string => "$apr1$U4N0j0JG$y5UJo87aft1Ardac/98EC.";
  "htaccess[nagiosadmin]"         string => "$apr1$F/Di/OXy$6INIIyolQZMlX1iAE/6tc.";
  "htaccess[jorgen]"              string => "$apr1$VEEafOGP$GicucVsaSul1FIK/Se2.l/";

  "htusers"                        slist => getindices("${htaccess}");
  "htpasswd"                       slist => getvalues("${htaccess}");

  "nagios_users"                  string => "CFEngine_Roadshow";
  "nagios_admins"                 string => "nagiosadmin,jorgen";
  "all_nagios_users"              string => "${nagios_users},${nagios_admins}";

files:

  "/etc/nagios3/cgi.cfg"
   perms             => mo("644","root"),
   action            => r_immediate,
   edit_template     => "$(sys.workdir)/roadshow_dynamic_inputs/templates/nagios.cgi.tmpl",
   classes           => if_repaired("restart_apache2");

methods:

  "any" usebundle => packages("nagios3.pkg");
  "any" usebundle => get_template("nagios.cgi.tmpl");
  "any" usebundle => nagios_htpasswd("nagios3.htaccess");

commands:
  restart_apache2::
  "/etc/init.d/apache2 restart";

reports:
 "nagios3: $(nagios3.htusers) $(${nagios3.htaccess}[$(nagios3.htusers)])";

}

bundle agent nagios_htpasswd(htaccess) {

vars:
 "users"                        slist => getindices("${htaccess}");

files:

  "/etc/nagios3/htpasswd.users"
   perms             => mo("644","root"),
   create            => "true",
   action            => r_immediate,
   edit_line         => edit_nagios_cfg("$(users)","$($(htaccess)[$(users)])");

}

bundle edit_line edit_nagios_cfg(user,passwd) {

delete_lines:
  ".*";

insert_lines:
"$(user):$(passwd)";

}

