bundle agent classify {

classes:

  "parsed_uqdn"      expression => regextract("^(....)(.)(..)(..)(...).*", $(sys.uqhost), "part");
  "parsed_fqdn"      expression => regextract("^(.*)\.([a-z0-9][a-z0-9]*)\.([a-z0-9][a-z0-9]*)", $(sys.fqhost), "org_part");

  "breth0"           expression => regcmp("^breth0", "$(current_device)");
  "eth"              expression => regcmp("^eth", "$(current_device)");
  "vmbr0"            expression => regcmp("^vlan", "$(current_device)");

vars:
    
  "role"                               string => "$(part[1])";
  "environment"                        string => "$(part[2])";
  "department"                         string => "$(part[3])";
  "location"                           string => "$(part[4])";
  "instance"                           string => "$(part[5])";

  "organisation"                       string => "$(org_part[2])";

  "role_input"                         string => "$(sys.workdir)/roadshow_inputs/role/$(role).cf";

  "domain"                             string => canonify($(sys.domain));
  "vendor"                             string => $(inventory_linux.id_array[1]);

  "ip_link_all"                        string => execresult("/usr/sbin/ip link | grep 'ether' ", useshell);
  "macs"                                slist => string_split($(ip_link_all), "\n", 99);

  "ip_all"                             string => execresult("/usr/sbin/ip r | grep 'dev' ", useshell);
  "ipr"                                 slist => string_split($(ip_all), "\n", 99);

  "ips_all"                            string => execresult("/usr/sbin/ip a | grep 'scope global' ", useshell);
  "ips"                                 slist => string_split($(ips_all), "\n", 99);

  "ipv4_index"                          slist => getindices("sys.ipv4");

 "dev_type.eth"::
  "interface"                          string => "eth";

 "dev_type.breth0"::
  "interface"                          string => "eth0";
  "bridge"                             string => "breth0";

 "dev_type.vmbr0"::
  "interface"                          string => "vlan";
  "bridge"                             string => "vmbr0";

methods:

  "We want to know the device type" usebundle => dev_type("$(ips)");

reports:

  "$(this.bundle) role: $(role) $(role_input)";
  "$(this.bundle) organisation: $(organisation)";
  "$(this.bundle) location: $(location) $($(location).location_name)";
  "$(this.bundle) interface: $(interface)";

}

bundle agent dev_type(ips) {

classes:

  "breth0"           expression => regcmp("^breth0", "$(current_device)");
  "eth"              expression => regcmp("^eth", "$(current_device)");
  "vmbr0"            expression => regcmp("^vlan", "$(current_device)");

vars:

  "dummy_ips"                          string => concat("dummy", $(ips));
  "device_type"                         slist => splitstring($(ips), " ", 99);
  "length_device"                         int => length("device_type");
  "current_device"                     string => nth("dummy_ips", $(length_device));

reports:

  "$(this.bundle) ips: $(ips)";
  "$(this.bundle) length device: $(length_device)";
  "$(this.bundle) current_device: $(current_device)";

}

