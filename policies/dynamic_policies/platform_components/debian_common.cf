bundle agent debian_common {

vars:

 x86_64::
  "arch"                       string => "amd64";
 !x86_64::
  "arch"                       string => "${sys.arch}";

 any::

  "pkg[debian-goodies]"        string => "*";
  "pkg[openssh-server]"        string => "*";

  "desired"                    string => "addupdate";
  "cfengine_version"           string => "3.6.6-1";
  "cfengine_package"           string => "cfengine-community-${cfengine_version}.${sys.arch}.deb";

  "cpkg[cfengine_community]"   string => "${cfengine_package}";
  "cpkg[cfengine_community]"   string => "${desired}";
  "cpkg[cfengine_community]"   string => "${cfengine_version}";
  "cpkg[cfengine_community]"   string => "${sys.arch}";

methods:
 
 "Configure apt mirror"     usebundle => aptdeb_mirror;
 "Install common packages"  usebundle => packages("debian_common.pkg");
 "CFEngine custom package"  usebundle => get_custom_package("${cfengine_package}");
 "Update CFEngine"          usebundle => custom_packages("debian_common.cpkg");

reports:
 "${this.bundle}: CFEngine package string = ${cfengine_package}";

}

bundle agent aptdeb_mirror {

vars:
  "mirror" string => "http://aptutl01.webhuis.nl:3142/";

files:
  "/etc/apt/apt.conf"
          create  => "true",
        edit_line => edit_apt_mirror($(mirror)),
          classes => if_repaired("update_mirror");

commands:
 update_mirror::
  "/bin/rm /var/lib/apt/lists/lock";
  "/bin/rm /var/lib/dpkg/lock";
  "/usr/bin/apt-get update";
  "/usr/bin/apt-get upgrade -y";

reports:
 "${this.bundle}: ${mirror}";

}

####################################################

bundle agent packages (pkgs_array) {

vars:
  "package_name"         slist => getindices("$(pkgs_array)");

packages:

  "$(package_name)"
    package_policy             => "addupdate",
    package_method             => apt,
    package_version            => "$($(pkgs_array)[$(package_name)])";

reports:
 "${this.bundle}:  ${package_name}";

}

bundle agent custom_packages (cpkgs_array) {

vars:

  "custom_package_index" slist => getindices($(cpkgs_array));

  "package"             string => "$($(cpkgs_array)[$(custom_package_index)][package])";
  "desired"             string => "$($(cpkgs_array)[$(custom_package_index)][desired])";
  "version"             string => "$($(cpkgs_array)[$(custom_package_index)][version])";
  "arch"                string => "$($(cpkgs_array)[$(custom_package_index)][arch])";

methods:

  "Addupdate custom package" usebundle => custom_package_specific( "$(package)", "$(desired)", "$(version)", "$(arch)" );

packages:
 !any::
  "$(custom_package_index)"
    package_policy  => "addupdate",
    package_method  => dpkg_version("/var/cache/apt/archives"),
    package_select  => "==",
    package_version => "$($(cpkgs_array)[$(custom_package_index)])";

reports:

 "${this.bundle}: $(custom_package_index), $(package), $(desired), $(version), $(arch)";

}

bundle agent custom_package_specific(package, desired, version, arch) {

methods:

  "Custom package" usebundle => package_specific(package, desired, version, arch);

reports:

  "${this.bundle}: $(package) $(desired), ${version}, ${arch}";

}

bundle agent get_custom_package(custom_package) {

files:

 "/var/cache/apt/archives/${custom_package}"
            comment => "Copy package",
             handle => "update_files_inputs_packages",
          copy_from => u_rcp("${do_roadshow.master_dynamic}/packages/${custom_package}","${sys.policy_hub}"),
             action => u_immediate;

reports:
 "${this.bundle}: ${custom_package}";

}

bundle agent restart_sshd {

commands:
  "service ssh restart"
     handle => "restart_sshd",
    comment => "restarting sshd";

reports:
 "${this.bundle}";

}
