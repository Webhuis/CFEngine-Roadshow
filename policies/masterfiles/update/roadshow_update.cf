#########################################################
#
# update_roadshow
# - Cfengine roadshow policy update (masterfiles -> inputs)
#
#########################################################

bundle agent roadshow_update {

vars:

  "master_static"  string => "$(sys.workdir)/masterfiles";
  "master_dynamic" string => "$(sys.workdir)/dynamic_policies";
  "vendor"         string => "$(vendor.vendor)";

files:

  "$(sys.workdir)/bin/cf-message.py"
     handle => "update_bin_roadshow",
     copy_from => u_rcp("${master_dynamic}/bin/cf-message.py", ${sys.policy_hub}),
     action => u_immediate,
     classes => u_if_repaired("update_report");

  "$(sys.workdir)/dynamic-inputs-local/domain/${sys.domain}.cf"
     handle => "update_files_inputs_roadshow_domain",
     copy_from => u_rcp("${master_dynamic}/domain/${sys.domain}/${sys.domain}.cf", ${sys.policy_hub}),
     file_select  => u_policies,
     action => u_immediate,
     classes => u_if_repaired("update_report");

  "$(sys.workdir)/dynamic-inputs-local/platform/common"
     handle => "update_files_inputs_roadshow_platform_common",
     depth_search => u_recurse("inf"),
     copy_from => u_rcp("${master_dynamic}/platform/${vendor}/common", ${sys.policy_hub}),
     file_select  => u_policies,
     action => u_immediate,
     classes => u_if_repaired("update_report");

  "$(sys.workdir)/dynamic-inputs-local/platform/${sys.flavor}/${${sys.flavor}.inputs}"
     handle => "update_files_inputs_roadshow_platform_components",
     copy_from => u_rcp("${master_dynamic}/platform_components/${vendor}/${${sys.flavor}.inputs}", ${sys.policy_hub}),
     file_select  => u_policies,
     action => u_immediate,
     classes => u_if_repaired("update_report");

reports:

  "${this.bundle}: ${classify.role} ${${classify.role}.inputs}";

}

bundle agent vendor {

classes:

  "os_release_has_id" expression => regextract('^ID="?([^"\s]+)"?$',
                                                $(os_release_info),
                                                "id_array"),
                         comment => "Extract ID= line from os-release to id_array";

vars:

  "os_release_info"    string => readfile("/etc/os-release", "512"),
                      comment => "Read /etc/os-release" ;

  "vendor"             string => canonify("$(id_array[1])");

}

body file_select u_policies {

      leaf_name => { ".*.cf" };
      file_result => "leaf_name";

}
